# buildout.cfg file for Plone 4 development work
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi
# ... just reach by the recipe name
[buildout]
parts =
    instance
    zopepy
    i18ndude
    zopeskel
    test
#    varnish-build
#    varnish
#    logrotate
    munin-zope
#    omelette

extends = 
    http://dist.plone.org/release/4.0.5/versions.cfg
    http://good-py.appspot.com/release/plone.app.z3cform/0.5.3?plone=4.0.5

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0.5
    http://dist.plone.org/thirdparty

extensions =
    mr.developer
    buildout.dumppickedversions
    buildout.threatlevel

sources = sources
auto-checkout = 
  plonetheme.pizza
  p4a.video
  p4a.videoembed
  p4a.plonevideo
  p4a.plonevideoembed
  ploneit.migrationtools

versions = versions

# Reference any folders where you have Python egg source code under development here 
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a 
# repository mr.developer will handle this automatically for you
develop =


# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage
file-storage = ${buildout:directory}/var/filestorage/Data.fs
enable-products-install = on
zope-conf-additional =
  <product-config ploneit_migrationtools>
    export_data_directory ${config:export_data_directory}
  </product-config>

eggs =
    Plone
    plone.app.caching
    munin.zope
    plonetheme.pizza
    p4a.video
    p4a.videoembed
    p4a.plonevideo
    p4a.plonevideoembed
    Products.PloneKeywordManager
    Products.PloneHelpCenter
    ploneit.migrationtools
    plone.reload

# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    munin.zope
    plonetheme.pizza
    p4a.video
    p4a.videoembed
    p4a.plonevideo
    p4a.plonevideoembed


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create ZopeSkel command
[zopeskel]
unzip = true
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    ${instance:eggs}

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
# [omelette]
# recipe = collective.recipe.omelette
# eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on format for this part
[sources]
collective.developermanual = svn http://svn.plone.org/svn/collective/collective.developermanual
plonetheme.pizza = svn https://svn.plone.org/svn/collective/plonetheme.pizza/trunk
p4a.video = svn http://svn.plone.org/svn/collective/p4a/p4a.video/trunk/
p4a.videoembed = svn http://svn.plone.org/svn/collective/p4a/p4a.videoembed/trunk/
p4a.plonevideo = svn http://svn.plone.org/svn/collective/p4a/p4a.plonevideo/trunk/
p4a.plonevideoembed = svn http://svn.plone.org/svn/collective/p4a/p4a.plonevideoembed/trunk/
ploneit.migrationtools = git git@github.com:gborelli/ploneit.migrationtools.git


[varnish-build]
recipe = zc.recipe.cmmi
url = ${varnish:download-url}

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
bind = 0.0.0.0:8000
backends = 127.0.0.1:8080
cache-size = 256M

[logrotate]
recipe = collective.recipe.template
input = templates/logrotate.conf
output = ${buildout:directory}/etc/logrotate.conf

[munin]
recipe = zc.recipe.egg
eggs = munin.plone
arguments = http_address='8080', user='${instance:user}', plone='ploneit'

[munin-zope]
recipe = zc.recipe.egg
eggs = munin.zope
arguments = http_address='8080', user='${instance:user}'

# Version pindowns for new style products go here - this section extends one provided in http://dist.plone.org/release/
[versions]
Cheetah = 2.2.1
Paste = 1.7.5.1
PasteScript = 1.7.3
ZopeSkel = 2.19
i18ndude = 3.2.2

#Required by:
#PasteScript 1.7.3
PasteDeploy = 1.3.4

#Required by:
#i18ndude 3.2.2
ordereddict = 1.1

plone.recipe.varnish = 1.2
zc.recipe.cmmi = 1.3.4
plone.app.caching = 1.0b2
plone.app.registry = 1.0b6
plone.autoform = 1.0b6
plone.registry = 1.0b5
plone.supermodel = 1.0b8
z3c.caching = 2.0a1

#Required by:
#plone.cachepurging 1.0b2
#plone.caching 1.0b2
five.globalrequest = 1.0

#Required by:
#plone.app.caching 1.0b2
plone.cachepurging = 1.0b2

#Required by:
#plone.app.caching 1.0b2
plone.caching = 1.0b2

#Required by:
#plone.caching 1.0b2
plone.transformchain = 1.0b1

#Required by:
#plone.app.caching 1.0b2
python-dateutil = 2.0

#Required by:
#plone.app.caching 1.0b2
z3c.zcmlhook = 1.0b1

#Required by:
#five.globalrequest 1.0
zope.globalrequest = 1.0
